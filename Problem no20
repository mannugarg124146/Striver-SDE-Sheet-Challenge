class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
       
     int n=nums.size();
    set<vector<int>>st;
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
           set<long long>hashset;
           for(int k=j+1;k<n;k++)
           {
               long long sum=nums[i]+nums[j];
               sum+=nums[k];
               long long need=target-sum;
               if(hashset.find(need)!=hashset.end())
               {
                   vector<int>tempp={nums[i],nums[j],nums[k],(int)(need)};
                   sort(tempp.begin(),tempp.end());
                   st.insert(tempp);
                   
               }
               hashset.insert(nums[k]);
           }
        }
    }
      vector<vector<int>> ans(st.begin(),st.end());
      return ans;
    
        
        
    }
};
